@page "/"
@inject HttpClient Http
@inject IMatDialogService MatDialogService

<h1 class="mb-5">Inkomster och utgifter i @DateTime.Now.ToString("MMMM", CultureInfo.InvariantCulture)</h1>

@if (budget != null)
{
    <div class="mat-layout-grid">
        <div class="mat-layout-grid-inner">
            <div class="mat-layout-grid-cell">
                <h4>Inkomster</h4>
                <MatTable Items="@budget.BudgetItems.Where(b => b.BudgetItemType == BudgetItemType.Income)" ShowPaging="false" class="mat-elevation-z5">
                    <MatTableHeader>
                        <th>Kategori</th>
                        <th>Summa</th>
                    </MatTableHeader>
                    <MatTableRow>
                        <td>@context.Category.Name</td>
                        <td>@String.Format("{0:C2}", @context.Amount)</td>
                    </MatTableRow>
                </MatTable>
                <MatButton OnClick="@(_=>OpenAddBudgetItemDialog(BudgetItemType.Income))">Add Income</MatButton>
            </div>
            <div class="mat-layout-grid-cell">
                <h4>Utgifter</h4>
                <MatTable Items="@budget.BudgetItems.Where(b => b.BudgetItemType == BudgetItemType.Expense)" ShowPaging="true" PageSize="5" class="mat-elevation-z5">
                    <MatTableHeader>
                        <th>Kategori</th>
                        <th>Summa</th>
                        <th>Egen anteckning</th>
                    </MatTableHeader>
                    <MatTableRow>
                        <td>@context.Category.Name</td>
                        <td>@String.Format("{0:C2}", @context.Amount)</td>
                        <td>@context.Name</td>
                    </MatTableRow>
                </MatTable>
                <MatButton OnClick="@(_=>OpenAddBudgetItemDialog(BudgetItemType.Expense))">Add Expense</MatButton>
            </div>
        </div>
    </div>
}
else
{
    <MatProgressBar Indeterminate="true"></MatProgressBar>
}

@code {
    private ExpenseTracker.Shared.Models.Budget budget;

    protected override async Task OnInitializedAsync() => await GetBudget();

    private async Task GetBudget() =>
        budget = await Http.GetFromJsonAsync<ExpenseTracker.Shared.Models.Budget>("https://localhost:44398/api/Budgets/Current");

    async Task OpenAddBudgetItemDialog(BudgetItemType budgetItemType)
    {
        try
        {
            BudgetItem result = (BudgetItem)await MatDialogService.OpenAsync(typeof(AddBudgetItemDialog), new MatDialogOptions());

            if (result == null)
                return;

            result.DateTime = new DateTime(0);
            result.BudgetItemType = budgetItemType;

            var response = await Http.PostAsJsonAsync<ExpenseTracker.Shared.Models.BudgetItem>
                ($"https://localhost:44398/api/Budgets/{budget.Id}/AddBudgetItem", result);

            if (response.StatusCode != System.Net.HttpStatusCode.Created)
                Console.WriteLine("Not created!");
            else
                await GetBudget();
        }
        catch (Exception e) 
        { 
            Console.WriteLine(e.Message); 
        }
    }
}