@inject IMatDialogService MatDialogService
@inject HttpClient Http


<MatDialogTitle style="display: flex; align-items: center;">
    <div style="flex: 1;">Lägg till inkomst</div>
</MatDialogTitle>
<MatDialogContent>
    @if (categories != null)
    {
        <MatList>
            <MatListItem>
                <MatTextField Label="Namn" @bind-Value="Income.Name" />
            </MatListItem>

            <MatListItem Class="mt-3">
                <MatSelectItem Label="Kategori" @bind-Value="@Income.Category" Items="@categories">
                    <ItemTemplate>
                        <span>@context?.Name</span>
                    </ItemTemplate>
                </MatSelectItem>
            </MatListItem>

            <MatListItem Class="mt-3">
                <MatNumericUpDownField Label="Summa"
                                       @bind-Value=@Income.Amount
                                       FieldType="MatNumericUpDownFieldType.Currency"
                                       DecimalPlaces=2>
                </MatNumericUpDownField>
            </MatListItem>

            <MatListItem Class="mt-3">
                <MatButton OnClick="@(_ => CloseDialog())">Avbryt</MatButton>
                <MatButton OnClick="@(_ => AddItem())">Lägg till</MatButton>
            </MatListItem>
        </MatList>
    }
</MatDialogContent>
<MatDialogActions>

</MatDialogActions>

@code
{
    [Parameter]
    public ExpenseTracker.Shared.Models.Income Income { get; set; } = new Income();

    private ExpenseTracker.Shared.Models.Category[] categories;

    [CascadingParameter]
    public MatDialogReference DialogReference { get; set; }

    protected override async Task OnInitializedAsync()
    {
        categories = await Http.GetFromJsonAsync<ExpenseTracker.Shared.Models.Category[]>(
            "https://localhost:44398/api/Budgets/Categories");
    }


    void CloseDialog()
    {
        DialogReference.Close(false);
    }

    async Task AddItem()
    {
        DialogReference.Close(Income);
    }
}